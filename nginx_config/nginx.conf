events {}

http {
  # Map URI to rule based on whether it contains "secret"
  map $request_uri $rule_value {
    default                         "Detect Kube API Interaction";
    ~*secret                        "Kube secret query going";  # case-insensitive match
  }

  # JSON log format with variable rule value
  log_format sidekick_json escape=json '{'
    '"output":"Honeypot Kube API Interaction ongoing",'
    '"priority":"Warning",'
    '"rule":"$rule_value",'
    '"source":"fake_kube_nginx",'
    '"time":"$time_iso8601",'
    '"output_fields":{'
      '"remote_addr":"$remote_addr",'
      '"request":"$request",'
      '"status":"$status",'
      '"user_agent":"$http_user_agent",'
      '"request_method":"$request_method",'
      '"request_uri":"$request_uri"'
    '}'
  '}';

  access_log /var/log/nginx/access.log sidekick_json; #Probably not needed, but kept for reference
  access_log /var/log/nginx/audit/falco_sidekick.log sidekick_json; # Audit log for Falco Sidekick

  server {
    listen 8443 ssl;
    ssl_certificate     /etc/nginx/self.crt;
    ssl_certificate_key /etc/nginx/self.key;

    location / {
      proxy_pass https://honeypot.honeypot; # Forward to the honeypot service, Should be vcluster API server DNS
      proxy_ssl_verify off;
      proxy_ssl_name localhost;
    }
  }
}
